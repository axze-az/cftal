//
// Copyright (C) 2010-2021 Axel Zeuner
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
//
#if !defined (__CFTAL_CONFIG_H__)
#define __CFTAL_CONFIG_H__ 1

#define __CFTAL_MAJOR__ @CFTAL_VERSION_MAJ@
#define __CFTAL_MINOR__ @CFTAL_VERSION_MIN@
#define __CFTAL_PATCHLEVEL__ @CFTAL_VERSION_PLV@

// configuration options
#define __CFTAL_CFG_USE_VF64_FOR_VF32__ @CFTAL_CFG_USE_VF64_FOR_VF32@

#define __CFTAL_CFG_USE_VF32_FOR_VF16__ @CFTAL_CFG_USE_VF32_FOR_VF16@

#define __CFTAL_CFG_ENABLE_AVX512__ @CFTAL_CFG_ENABLE_AVX512@
#if __CFTAL_CFG_ENABLE_AVX512__ > 0
#if defined (__AVX512F__)
// #error "AVX512 support is not yet implemented"
// #pragma GCC warning "AVX512 support is not well tested"
#endif
#endif

#if defined (__ARM_NEON)
#if !defined (__ARM_NEON__)
#define __ARM_NEON__ 1
#endif
#endif

#if defined (__GNUC__) || defined (__clang__)
// clang++ -dM -E -x c++ -march=native /dev/null
// g++ -dM -E -x c++ -march=native /dev/null
#define __thread_local __thread
#define __likely(a) __builtin_expect(!!(a), 1)
#define __unlikely(a) __builtin_expect(!!(a), 0)
#define __assume_aligned(p, x) __builtin_assume_aligned(p, x)
#endif

#if defined (__clang__)
#if defined (__FMA__) || defined (__FMA4__)
#define FP_FAST_FMA 1
#define FP_FAST_FMAF 1
#endif
#endif


#if !defined (__GNUC__) && !defined(__clang__) || (IN_KDEVELOP_PARSER>0)
#define __SSSE3__
#define __SSE41__
#define __SSE42__
#define __AVX__
#define __AVX2__
#define __AVX515F__
#endif

#if defined (_MSC_VER)
#define __thread_local __declspec(thread)
#endif

#if !defined (__assume_aligned)
#define __assume_aligned(p, x) p
#endif
#if !defined (__likely)
#define __likely(a) a
#endif
#if !defined (__unlikely)
#define __unlikely(a) a
#endif
#if !defined(__GNUC__) && !defined (__CLANG__)
#define __restrict
#endif
#if !defined(__GNUC__) && !defined (__CLANG__)
#define __attribute__(X)
#endif

// Local variables:
// mode: c++
// end:
#endif
