project(cftal-tests)

set (TEST_SRCS
  div.cc
  rcp_div_32.cc
  rcp_div_64.cc
  intops.cc
  signs.cc
  f32_f64.cc
  snippets.cc
  of_fp_funcs.cc
  of_math_funcs.cc
  call_mpfr.cc
)
include_directories(../..)
include_directories(../include)
include_directories(./include)

find_package(Boost REQUIRED)
if(${Boost_FOUND})
    #message ("${Boost_FOUND}")
    #message ("${Boost_INCLUDE_DIRS}")
    include_directories(${Boost_INCLUDE_DIRS})
endif()

#include(FindPkgConfig)
find_library(LIBGMP gmp REQUIRED)
if (LIBGMP)
    message(${LIBGMP})
endif()
find_library(LIBMPFR mpfr REQUIRED)
if (LIBMPFR)
    message(${LIBMPFR})
endif()
find_file(HDRMPFR mpfr.h)
if (HDRMPFR)
    message(${HDRMPFR})
endif()

function(target_add_mpfr_libs arg1)
    target_link_libraries(${arg1} ${LIBMPFR})
    target_link_libraries(${arg1} ${LIBGMP})
endfunction()


add_library(cftal-test SHARED ${TEST_SRCS})
set_property(TARGET cftal-test
  PROPERTY INTERFACE_POSITION_INDEPENDENT_CODE ON)
set_target_properties(cftal-test PROPERTIES
  SOVERSION "${CFTAL_VERSION_MAJ}"
  VERSION "${CFTAL_VERSION_MAJ}.${CFTAL_VERSION_MIN}")
target_link_libraries(cftal-test cftal-so)
target_link_libraries(cftal-test stdc++fs)
target_add_mpfr_libs(cftal-test)
enable_testing()

function(target_add_test_libs arg1)
    target_link_libraries(${arg1} cftal-test)
    target_add_mpfr_libs(${arg1})
endfunction()

add_executable(gen-test-vec gen-test-vec.cc)

function(test_prog arg1)
    add_executable(${arg1} ${arg1}.cc)
    target_add_test_libs(${arg1})
    add_test(NAME ${arg1} COMMAND ${arg1})
endfunction()

add_executable(dev-func dev-func.cc)
target_add_test_libs(dev-func)

test_prog(test-dint8)
test_prog(test-duint8)
test_prog(test-d_real)
test_prog(test-t_real)
test_prog(test-div-u64)
test_prog(test-div-s64)
test_prog(test-rcp-div-u32)
test_prog(test-rcp-div-u64)
test_prog(test-div-u32)
test_prog(test-div-s32)
test_prog(test-div-u16)
test_prog(test-div-s16)
#test_prog(test-fp-ops)
test_prog(test-ops-vXf32)
test_prog(test-ops-vXf64)
test_prog(test-ops-vXs16)
test_prog(test-ops-vXs32)
test_prog(test-ops-vXs64)
test_prog(test-ops-vXu16)
test_prog(test-ops-vXu32)
test_prog(test-ops-vXu64)
test_prog(test-frexp)
test_prog(test-ldexp)
test_prog(test-ilogb)
test_prog(test-floor)
test_prog(test-ceil)
test_prog(test-trunc)
test_prog(test-rint)
test_prog(test-intops)

test_prog(test-sqrt-f64)
test_prog(test-cbrt-f64)
test_prog(test-exp-f64)
test_prog(test-expm1-f64)
test_prog(test-sinh-f64)
test_prog(test-cosh-f64)
test_prog(test-tanh-f64)
test_prog(test-exp2-f64)
test_prog(test-exp10-f64)
test_prog(test-log-f64)
test_prog(test-log1p-f64)
test_prog(test-log10-f64)
test_prog(test-log2-f64)
#test_prog(test-pow-f64)
test_prog(test-asinh-f64)
test_prog(test-acosh-f64)
test_prog(test-atanh-f64)

test_prog(test-sin-f64)
test_prog(test-cos-f64)
test_prog(test-sincos-f64)
test_prog(test-tan-f64)
test_prog(test-atan-f64)
test_prog(test-atan2-f64)
test_prog(test-asin-f64)
test_prog(test-acos-f64)

test_prog(test-exp_mx2-f64)
test_prog(test-exp_px2-f64)
test_prog(test-exp2_mx2-f64)
test_prog(test-exp2_px2-f64)
test_prog(test-exp10_mx2-f64)
test_prog(test-exp10_px2-f64)

test_prog(test-erf-f64)
#test_prog(test-erfc-f64)

test_prog(test-sqrt-f32)
test_prog(test-cbrt-f32)
test_prog(test-exp-f32)
test_prog(test-expm1-f32)
test_prog(test-sinh-f32)
test_prog(test-cosh-f32)
test_prog(test-tanh-f32)
test_prog(test-exp2-f32)
test_prog(test-exp10-f32)
test_prog(test-log-f32)
test_prog(test-log1p-f32)
test_prog(test-log10-f32)
test_prog(test-log2-f32)
#test_prog(test-pow-f32)
test_prog(test-asinh-f32)
test_prog(test-acosh-f32)
test_prog(test-atanh-f32)

test_prog(test-sin-f32)
test_prog(test-cos-f32)
test_prog(test-sincos-f32)
test_prog(test-tan-f32)
test_prog(test-atan-f32)
test_prog(test-atan2-f32)
test_prog(test-asin-f32)
test_prog(test-acos-f32)

test_prog(test-exp_mx2-f32)
test_prog(test-exp_px2-f32)
test_prog(test-exp2_mx2-f32)
test_prog(test-exp2_px2-f32)
test_prog(test-exp10_mx2-f32)
test_prog(test-exp10_px2-f32)

test_prog(test-erf-f32)
#test_prog(test-erfc-f32)

test_prog(test-v2)

if (CFTAL_FULL_TEST)
  #test_prog(test-v2)
  test_prog(test-v4f64)
  test_prog(test-v4s64)
  test_prog(test-v4u64)
  test_prog(test-v4s32)
  test_prog(test-v4u32)
  test_prog(test-v8s16)
  test_prog(test-v8u16)
  test_prog(test-v8f32)
  test_prog(test-v8s32)
  test_prog(test-v8u32)
endif()

add_executable(gen-func-data gen-func-data.cc)
target_add_test_libs(gen-func-data)
add_executable(gen-constants gen-constants.cc)
target_add_test_libs(gen-constants)
add_executable(gen-approx gen-approx.cc)
target_add_test_libs(gen-approx)
