#! /usr/bin/sollya
execute("common.sollya");

/* implementpoly(p, [-log(2)/512, log(2)/512], 1e-30, DD, "exp_p", "exp.c"); */
/* printexpansion(p-1.0); */
verbosity=0!;
prec=1024!;
write("\n");

/* half exp f32 */
f = exp(x);
i = [-log(2)/2, log(2)/2];
d = guessdegree(f, i, 0x1p-14);
d;
b = [|0, ..., 5|];
c = [|SG...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const vf_type exp_f16_c", "exp_f16", b, c);
plot((p(x)-f(x))/f(x), i, postscriptfile, "exp-f16");

/* half log f32 */
f= log((1+x)/(1-x));
i= [0x1p-58, (sqrt(2)-1)/(1+sqrt(2))];
d = guessdegree(f, i, 0x1p-14);
d;
b = [|1, 3, 5|];
c = [|SG, SG...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const vf_type log_f16_c", "log_f16", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x),
                       i,
                       postscriptfile, "log-f16");

/* half sin(x) f32 */
i = [0, pi/4];
f = sin(x);
d = guessdegree(f, i, 0x1p-14);
d;
b = [|1,3,5,7,9|];
c = [|SG...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const vf_type sin_f16_c", "sin_f16", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x), i,
                       postscriptfile, "sin-f16");

/* half cos(x) f32 */
i = [0, pi/4];
f = cos(x);
d = guessdegree(f, i, 0x1p-14);
d;
b = [|0,2,4,6,8|];
c = [|SG...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const vf_type cos_f16_c", "cos_f16", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x), i,
                       postscriptfile, "cos-f16");

/* half tan(x) f32 */
f = tan(x);
i = [0, pi/4];
d = guessdegree(f, i, 0x1p-14);
d;
b = [|1,3,5,7,9,11,13|];
c = [|SG...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const vf_type tan_f16_c", "tan_16", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x), i,
                       postscriptfile, "tan-f16");

/*
 * Local variables:
 * mode: c++
 * end:
 */
