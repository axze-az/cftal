#! /usr/bin/sollya
execute("common.sollya");

/* implementpoly(p, [-log(2)/512, log(2)/512], 1e-30, DD, "exp_p", "exp.c"); */
/* printexpansion(p-1.0); */
verbosity=1!;
prec=2048!;
write("\n");

g=exp(1/x*1/x)*1/x*erfc(1/x);
/* erfc(x) piecewise polynomial approximations */
g= exp(1/x*1/x)*1/x*erfc(1/x);
ir=1.0/6.0;
il=1.0/27.5;
im= dirtyfindzeros(g(x)-(0.5*(g(il)+g(ir))), [il, ir])[0];
im= round(im, 24, RN);
i = [il-im, ir-im];
i;
im;
x0=im;
deg=25;
f=g(x+x0);
b=[|0, ..., deg|];
c= [|DD, D...|];
p=fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double erfc_i3_c", "erfc", b, c);
write_coeff(il, "", "const double erfc_i3_left", double);
write_coeff(x0, "", "const double erfc_i3_x0", double);
plot(log(abs(p(x)-f(x))), i, postscriptfile, "erfc_i3-f64");

/*
 * Local variables:
 * mode: c++
 * end:
 */
