#! /usr/bin/sollya
execute("common.sollya");

/* implementpoly(p, [-log(2)/512, log(2)/512], 1e-30, DD, "exp_p", "exp.c"); */
/* printexpansion(p-1.0); */
verbosity=1!;
prec=2048!;
write("\n");

/* tanh(x) f64 */
/*
       tanh(x) = x - x^3/3 + 2x^5/15
               = x - x^3/(3 + x^2 Q(x^2));
       tanh(x) -x = - x^3/(3 - x^2 Q(x^2));
       (tanh(x) -x)/(-x^3) = 1/(3+x^2 Q(x^2))
           x^3
       ---------- = 3 + Q(x^2);
       x - tanh(x)

*/
f = x^3/(x-tanh(x))-3;
i = [0x1p-512, 1/2+1/16];
d = guessdegree(f, i, 0x1p-28);
d;
b = [| 2, 4, 6|];
c = [|SG...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const vf_type tanh_c", "tanh", b, c);
plot((p(x)-f(x))/f(x), i,
                       postscriptfile, "tanh-f32");

/*
f = exp(x);
i = [-log(2)/2, log(2)/2];
d = guessdegree(f, i, 0x1p-14);
d;
b = [|0, ..., 5|];
c = [|SG...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const vf_type exp_f16_c", "exp_f16", b, c);
plot((p(x)-f(x))/f(x), i, postscriptfile, "exp-f16");

f= log((1+x)/(1-x));
i= [0x1p-58, (sqrt(2)-1)/(1+sqrt(2))];
d = guessdegree(f, i, 0x1p-14);
d;
b = [|1, 3, 5|];
c = [|SG, SG...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const vf_type log_f16_c", "log_f16", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x),
                       i,
                       postscriptfile, "log-f16");

/*
 * Local variables:
 * mode: c++
 * end:
 */
