#! /usr/bin/sollya
execute("common.sollya");

/* implementpoly(p, [-log(2)/512, log(2)/512], 1e-30, DD, "exp_p", "exp.c"); */
/* printexpansion(p-1.0); */
verbosity=1!;
prec=2048!;
write("\n");

approx_on_interval = proc(f, i, b, c, pfx, n) {
    var d, p, cname, psfile, fname, lname;
    d = guessdegree(f, i, 0x1p-60);
    d;
    p = fpminimax(f, b, c, i, relative, floating);
    write_approx_prec(p, f, i);
    fname=pfx@"_i"@n;
    psfile =pfx@"-i"@n;
    cname="const double "@fname@"_c";
    // write_coeffs(p, cname, fname, b, c);
    lname="const double "@fname@"_right";
    // write_coeff(sup(i), "", lname, double);
    // plot((p(x)-f(x))/f(x), i, postscriptfile, psfile);
};

f = erfc(x);
i = [0.0, 0.625];
b = [|0, ..., 18|];
c = [|DD, D...|];
approx_on_interval(f, i, b, c, "erfc", 0);
i = [0.625, 1.5];
approx_on_interval(f, i, b, c, "erfc", 1);
i = [1.5, 2.5];
approx_on_interval(f, i, b, c, "erfc", 2);
i = [2.5, 3.5];
approx_on_interval(f, i, b, c, "erfc", 3);
i = [3.5, 4.5];
approx_on_interval(f, i, b, c, "erfc", 4);

/*
f = erfc(x);
i = [0.0, 0.625];
d = guessdegree(f, i, 0x1p-60);
d;
b = [|0, ..., 16|];
c = [|DD, D...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double erfc_i0_c", "erfc_i0", b, c);
write_coeff(sup(i), "", "const double erfc_i0_right", double);
plot((p(x)-f(x))/f(x), i, postscriptfile, "erfc-i0");

f = erfc(x);
i = [0.625, 1.25];
d = guessdegree(f, i, 0x1p-60);
d;
b = [|0, ..., 16|];
c = [|DD, D...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double erfc_i1_c", "erfc_i1", b, c);
write_coeff(sup(i), "", "const double erfc_i1_right", double);
plot((p(x)-f(x))/f(x), i, postscriptfile, "erfc-i1");
*/
/*
f = exp(x);
i = [-log(2)/2, log(2)/2];
d = guessdegree(f, i, 0x1p-14);
d;
b = [|0, ..., 5|];
c = [|SG...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const vf_type exp_f16_c", "exp_f16", b, c);
plot((p(x)-f(x))/f(x), i, postscriptfile, "exp-f16");

f= log((1+x)/(1-x));
i= [0x1p-58, (sqrt(2)-1)/(1+sqrt(2))];
d = guessdegree(f, i, 0x1p-14);
d;
b = [|1, 3, 5|];
c = [|SG, SG...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const vf_type log_f16_c", "log_f16", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x),
                       i,
                       postscriptfile, "log-f16");

/*
 * Local variables:
 * mode: c++
 * end:
 */
