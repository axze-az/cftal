#! /usr/bin/sollya
execute("common.sollya");

/* implementpoly(p, [-log(2)/512, log(2)/512], 1e-30, DD, "exp_p", "exp.c"); */
/* printexpansion(p-1.0); */
verbosity=1!;
prec=2048!;
write("\n");

f = sinh(x);
i = [0x1p-512, log(2)/2];
d = guessdegree(f, i, 0x1p-60);
d;
b = [|1, 3, 5, 7, 9, 11, 13|];
c = [|D...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double sinh_c", "sinh", b, c);
plot((p(x)-f(x))/f(x), i, postscriptfile, "sinh-poly-f64");
// implementpoly(p, i, 0x1p-53, DD, "exp_poly_k", "expn.c");

f = cosh(x);
i = [0x1p-512, log(2)/2];
d = guessdegree(f, i, 0x1p-60);
d;
b = [|0, 2, 4, 6, 8, 10, 12|];
c = [|D...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double cosh_c", "cosh", b, c);
plot((p(x)-f(x))/f(x), i, postscriptfile, "cosh-poly-f64");
// implementpoly(p, i, 0x1p-53, DD, "exp_poly_k", "expn.c");


/*
f = exp(x);
i = [-log(2)/2, log(2)/2];
d = guessdegree(f, i, 0x1p-14);
d;
b = [|0, ..., 5|];
c = [|SG...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const vf_type exp_f16_c", "exp_f16", b, c);
plot((p(x)-f(x))/f(x), i, postscriptfile, "exp-f16");

f= log((1+x)/(1-x));
i= [0x1p-58, (sqrt(2)-1)/(1+sqrt(2))];
d = guessdegree(f, i, 0x1p-14);
d;
b = [|1, 3, 5|];
c = [|SG, SG...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const vf_type log_f16_c", "log_f16", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x),
                       i,
                       postscriptfile, "log-f16");

/*
 * Local variables:
 * mode: c++
 * end:
 */
