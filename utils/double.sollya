#! /usr/bin/sollya
execute("common.sollya");

/* implementpoly(p, [-log(2)/512, log(2)/512], 1e-30, DD, "exp_p", "exp.c"); */
/* printexpansion(p-1.0); */
verbosity=1!;
prec=2048!;
write("\n");

/* exp(x) f64 using tangs method */
N = 32;
f = exp(x);
f1 = expm1(x);
g=log(2)/2;
i=[-g/N, g/N];
exp_table(N, double);
b = [|1, ..., 6|];
c = [|D...|];
p = fpminimax(f1, b, c, i, relative, floating);
write_approx_prec(p, f1, i);
write_coeffs(p, "constexpr\n    const double exp_c", "exp", b, c);
/* N/ln(2) */
write_coeff(N/log(2), "", "const double _32_ln2", double);
/* ln(2)/N Cody and Waite */
c1h=round(log(2)/N, 53-11-5, RN);
c1l=log(2)/N-c1h;
write_coeff(c1h, "", "const double _ln2_32_cw_h", double);
write_coeff(c1l, "", "const double _ln2_32_cw_l", double);
/* ln(2)/N */
c1h=double(log(2)/N);
c1l=log(2)/N-c1h;
write_coeff(c1h, "", "const double _ln2_32_h", double);
write_coeff(c1l, "", "const double _ln2_32_l", double);

/* log_10(x) = lg(10) */
/* N/lg(2) */
write_coeff(N/(log(2)/log(10)), "", "const double _32_lg2", double);
/* lg(2)/N Cody and Waite */
lg_2_N=log(2)/(log(10))/N;
c1h=round(lg_2_N, 53-11-5, RN);
c1l=lg_2_N-c1h;
write_coeff(c1h, "", "const double _lg2_32_cw_h", double);
write_coeff(c1l, "", "const double _lg2_32_cw_l", double);
/* lg(2)/N */
c1h=double(lg_2_N);
c1l=lg_2_N-c1h;
write_coeff(c1h, "", "const double _lg2_32_h", double);
write_coeff(c1l, "", "const double _lg2_32_l", double);

quit;

/* exp(x) f64 */
f = x*(exp(x)+1)/(exp(x)-1)-2;
i = [0x1p-512, log(2)/2];
d = guessdegree(f, i, 0x1p-60);
b = [|2, 4, 6, 8, 10|];
c = [|D...|];
d;
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double exp_c", "exp", b, c);
plot((p(x)-f(x))/f(x), i,
                       postscriptfile, "exp-f64");
// implementpoly(p, i, 0x1p-60, D, "exp_poly_k", "exp.c");


/*
        exp(x) = 1 + 2x/(2-x+x^2*P(x^2)
        exp(x) -1 = 2x/(2-x+x^2*P(x^2)

           2x
        -------- = 2-x+x^2*P(x^2)
        exp(x)-1

          2x
        ----- - 2 + x = x^2*P(x^2)
        e^x-1

        (2x/(exp(x)-1) - 2 +x)/x^2 = P(x^2)

*/
f = (2*x/(exp(x)-1) - 2 +x)/(x^2);
i = [0x1p-512, log(2)/2];
d = guessdegree(f, i, 0x1p-60);
d;
b = [|0, 2, 4, 6, 8, 10|];
c = [|D...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double expn_c", "expn", b, c);
plot((p(x)-f(x))/f(x), i,
                       postscriptfile, "exp-n-f64");
// implementpoly(p, i, 0x1p-60, DD, "exp_poly_k", "expn.c");

/* a simple polynomial for exp f64 */
f = exp(x);
i = [-log(2)/2, log(2)/2];
d = guessdegree(f, i, 0x1p-60);
d;
b = [|0, ..., 13|];
c = [|D...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "constexpr\n    const double exp_c", "exp", b, c);
plot((p(x)-f(x))/f(x), i, postscriptfile, "exp-poly-f64");
// implementpoly(p, i, 0x1p-53, DD, "exp_poly_k", "expn.c");

/* a simple polynomial for higher precision exp f64 */
f = exp(x);
i = [-log(2)/2, log(2)/2];
d = guessdegree(f, i, 0x1p-60);
d;
b = [|0, ..., 13|];
c = [|D...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "constexpr\n    const double pow_exp_c", "exp", b, c);
plot((p(x)-f(x))/f(x), i, postscriptfile, "pow-exp-poly-f64");

/* expm1(x) f64 */
f= 6*((x*(exp(x)+1)/(exp(x)-1))-2)/(x^2);
i = [0x1p-512, log(2)/2];
d = guessdegree(f, i, 0x1p-60);
b = [|2, 4, 6, 8, 10|];
c = [|D...|];
d;
p = fpminimax(f, b, c, i, 1.0, relative, floating);
write_approx_prec(p, f, i);
write_coeffs_pow_2_i(p-1, "const double expm1_c", "expm1", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x), i,
                       postscriptfile, "expm1-f64");

/* exp2(x) f64 */
i = [-0.5, 0.5];
f = 2^x;
d = guessdegree(f, i, 0x1p-60);
d;
b = [|0, ... , 13|];
c = [|D...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double exp2_c", "exp2", b, c);
// write_coeff(log(2), "", "const double log2", double);
plot((p(x)-f(x))/f(x), p(x)-f(x), i,
                       postscriptfile, "exp2-f64");
implementpoly(p, i, 0x1p-55, D, "exp2_poly_k", "exp2.c");


/* exp10(x) f64 */
i = [-log(2)/log(10)/2, log(2)/log(10)/2];
f = 10^x;
d = guessdegree(f, i, 0x1p-60);
d;
b = [|0, ... , 12|];
c = [|D...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double exp10_c", "exp10", b, c);
write_coeff(log(10), "", "const double log10", double);
write_coeff(log(10)*log(10), "", "const double log10sqr", double);
plot((p(x)-f(x))/f(x), p(x)-f(x), i,
                       postscriptfile, "exp10-f64");


/* log1p for log_hp implementation */
f= log1p(x);
ib=round(sqrt(2)/2, 53-32, RD);
printdouble(ib);
i= [ib-1, (ib*2)-1];
d = guessdegree(f, i, 0x1p-72);
d;
b = [|1, ..., 28|];
c = [|D, D, DD, D...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "constexpr\n    const double log_c", "log", b, c);
/* implementpoly(p, i, 0x1p-68, DD, "__log", "log.c"); */

/* log1p for direct log implementation */
f= log1p(x);
ib=round(sqrt(2)/2, 53-32, RD);
printdouble(ib);
i= [ib-1, (ib*2)-1];
d = guessdegree(f, i, 0x1p-60);
d;
b = [|1, ..., 23|];
c = [|D, D...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "constexpr\n    const double log_c", "log", b, c);

/* log(x) f64 */
f= log((1+x)/(1-x))/x-2.0;
i= [0x1p-58, (sqrt(2)-1)/(1+sqrt(2))];
d = guessdegree(f, i, 0x1p-60);
d;
b = [|2, 4, 6, 8, 10, 12, 14, 16|];
c = [|D...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double log_c", "log", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x),
                       i,
                       postscriptfile, "log-f64");

/* y= (x-1)/(x+1) */
/* log(x) f64 */
f= log((1+x)/(1-x));
i= [0, (sqrt(2)-1)/(1+sqrt(2))];
d = guessdegree(f, i, 0x1p-84);
d;
b = [|1, 3, 5, 7, 9, 11, 13, 15, 17, 19|];
c = [|D, D...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double pow_log_c", "pow_log", b, c);
write_coeff(1/log(2), "", "const double c_1_ln2_", doubledouble);
plot((p(x)-f(x))/f(x), p(x)-f(x),
                       i,
                       postscriptfile, "pow-log-f64");

/* pow log with high precision */
/* y= (x-1)/(x+1) */
/* log(x) f64 */
f= log((1+x)/(1-x));
i= [0, (sqrt(2)-1)/(1+sqrt(2))];
d = guessdegree(f, i, 0x1p-84);
d;
b = [|1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23|];
c = [|D, DD, DD, D, D...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double pow_log_hp_c", "pow_log_hp", b, c);
// write_coeff(1/log(2), "", "const double c_1_ln2_", doubledouble);
plot((p(x)-f(x))/f(x), p(x)-f(x),
                       i,
                       postscriptfile, "pow-log-hp-f64");

/* sin(x) f64 */
i = [0x1p-512, pi/4];
f = sin(x);
d = guessdegree(f, i, 0x1p-60);
d;
b = [|3, 5, 7, 9, 11, 13, 15, 17|];
c = [|D, D...|];
p = fpminimax(f, b, c, i, 0+x, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double sin_c", "sin", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x), i,
                       postscriptfile, "sin-f64");

/* sin(x) f64 from sun libm*/
i = [0x1p-58, pi/4];
f = sin(x)/x;
d = guessdegree(f, i, 0x1p-60);
d;
b = [|2,4,6,8,10,12|];
c = [|D...|];
p = fpminimax(f, b, c, i, 1.0,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double sin_sun_c", "sin", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x), i,
                       postscriptfile, "sin-sun-f64");

/* cos(x) f64 */
i = [0x1p-58, pi/4];
f = cos(x);
d = guessdegree(f, i, 0x1p-60);
d;
b = [|4, 6, 8, 10, 12, 14, 16|];
c = [|D...|];
p = fpminimax(f, b, c, i, 1-1/2*x^2, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double cos_c", "cos", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x), i,
                       postscriptfile, "cos-f64");

/* cos(x) f64 from sun libm */
i = [0x1p-58, pi/4];
f = cos(x)-1+(x^2)/2;
d = guessdegree(f, i, 0x1p-60);
d;
b = [|4,6,8,10,12,14|];
c = [|D...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double cos_sun_c", "cos", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x), i,
                       postscriptfile, "cos-sun-f64");

/* tan as one polynomial over [0,pi/4] */
f = tan(x);
i = [0, pi/4];
d = guessdegree(f, i, 0x1p-60);
d;
b = [|1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31|];
c = [|D, D...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double tan_c", "tan", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x), i,
                       postscriptfile, "tan-f64");

/* tan(x) f64 from sun libm*/
f = tan(x)/x;
i = [0x1p-58, 6/7*pi/4];
d = guessdegree(f, i, 0x1p-60);
d;
b = [|2,4,6,8,10,12,14,16,18,20,22,24,26|];
c = [|D...|];
p = fpminimax(f, b, c, i, 1.0,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double tan_sun_c", "tan", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x), i,
                       postscriptfile, "tan-sun-f64");

/* atan(x) f64, piecewise polynomial approximations */
f = atan(x);
i = [0, 0.375];
d = guessdegree(f, i, 0x1p-60);
d;
b = [|1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23|];
c = [|D...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double atan_i0_c", "atan_0", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x), i,
                       postscriptfile, "atan_i0-f64");

il= 0.375;
ir= 1.0;
im= dirtyfindzeros(atan(x)-(0.5*(atan(il)+atan(ir))), [il, ir])[0];
im= round(im, 24, RN);
i = [il-im, ir-im];
i;
im;
x0= im;
f = atan(x+x0);
d = guessdegree(f, i, 0x1p-60);
d;
b = [|0, ..., 18|];
c = [|DD, D...|];
p = fpminimax(f, b, c, i, relative, floating);
p;
write_approx_prec_shift(p, f, i, im);
write_coeffs(p, "const double atan_i1_c", "atan_i1", b, c);
write_coeff(il, "", "const double atan_i1_left", double);
write_coeff(ir, "", "const double atan_i1_right", double);
write_coeff(x0, "", "const double atan_i1_x0", double);
plot((p(x)-f(x))/f(x), i, postscriptfile, "atan_i1-f64");

/* asin(x) f64 */
i = [0x1p-58, 0.5];
f = (asin(x)-x)/(x^3);
d = guessdegree(f, i, 0x1p-60);
d;
b = [|0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24|];
c = [|D...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double asin_c", "asin", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x), i,
                       postscriptfile, "asin-f64");

/* cbrt(x) f64 */
i = [2^-3, 1];
f = (x)^(1/3);
d = guessdegree(f, i, 0x1p-7);
d;
b= [|0,...,3|];
c= [|D...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double cbrt_c", "cbrt", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x), i,
                       postscriptfile, "cbrt-f64");

/* sinh(x) f64 for calculation over sinh(x+y) = ...*/
f = sinh(x);
i = [0x1p-512, log(2)/2];
d = guessdegree(f, i, 0x1p-60);
d;
b = [|1, 3, 5, 7, 9, 11, 13|];
c = [|D...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double sinh_c", "sinh", b, c);
plot((p(x)-f(x))/f(x), i, postscriptfile, "sinh-poly-f64");

/* cosh(x) f64 for calculation over cosh(x+y) = ...*/
f = cosh(x);
i = [0x1p-512, log(2)/2];
d = guessdegree(f, i, 0x1p-60);
d;
b = [|0, 2, 4, 6, 8, 10, 12|];
c = [|D...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double cosh_c", "cosh", b, c);
plot((p(x)-f(x))/f(x), i, postscriptfile, "cosh-poly-f64");

/* sinh(x) f64 */
f= x^3/(sinh(x)-x);
i =[0x1p-58, 1.0];
d = guessdegree(f, i, 0x1p-60);
d;
b = [|0, 2, 4, 6, 8, 10, 12|];
c = [|D...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double sinh_c", "sinh", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x),
                       i,
                       postscriptfile, "sinh-f64");

/* cosh(x) f64 */
f= (cosh(x)-1)/(x^2);
i =[0x1p-58, log(2.0)];
d = guessdegree(f, i, 0x1p-60);
d;
b = [|0, 2, 4, 6, 8, 10, 12|];
c = [|D...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double cosh_c", "cosh", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x),
                       i,
                       postscriptfile, "cosh-f64");

/* tanh(x) f64 */
/*
       tanh(x) = x - x^3/3 + 2x^5/15
               = x - x^3/(3 + x^2 Q(x^2));
       tanh(x) -x = - x^3/(3 - x^2 Q(x^2));
       (tanh(x) -x)/(-x^3) = 1/(3+x^2 Q(x^2))
           x^3
       ---------- = 3 + x^2 *Q;
       x - tanh(x)

*/
f = x^3/(x-tanh(x))-3;
i = [0x1p-512, 1/2+1/16];
d = guessdegree(f, i, 0x1p-64);
d;
b = [| 2, 4, 6, 8, 10, 12|];
c = [|D...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double tanh_c", "tanh", b, c);
plot((p(x)-f(x))/f(x), i,
                       postscriptfile, "tanh-f64");

/* polynomial for sinh where (e^x-e^x) fails */
f = sinh(x);
i = [0x1p-512, log(2)/4];
d = guessdegree(f, i, 0x1p-60);
d;
b = [|1, 3, 5, 7, 9|];
c = [|D...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "constexpr\n    const double sinh_c", "sinh", b, c);
write_coeff(sup(i), "", "constexpr\n    const double sinh_i0_right",
            double);

/* polynomial for tanh where (e^2x-1)(e^2x+1) fails */
f = tanh(x);
i = [0x1p-512, log(2)/32];
d = guessdegree(f, i, 0x1p-64);
d;
b = [| 1, 3, 5, 7|];
c = [|D...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "constexpr\n    const double tanh_c", "tanh", b, c);
write_coeff(sup(i), "", "constexpr\n    const double tanh_i0_right",
            double);

/* rsqrt f64 */
f= 1.0/sqrt(x);
i= [2^(-2), 2^(-1)-2^(-7)];
d = guessdegree(f, i, 0x1p-20);
d;
b = [|0, ..., 7|];
c = [|D...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double rsqrt_i0_c", "rsqrt", b, c);
/* write_coeff(inf(i), "", "const double rsqrt_i0_left", double); */
plot((p(x)-f(x))/f(x), p(x)-f(x),
                       i,
                       postscriptfile, "rsqrt-i0-f64");

f= 1.0/sqrt(x);
i= [2^(-1)-2^(-7), 2^(-0)];
d = guessdegree(f, i, 0x1p-20);
d;
b = [|0, ..., 7|];
c = [|D...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double rsqrt_i1_c", "rsqrt", b, c);
write_coeff(inf(i), "", "const double rsqrt_i1_left", double);
plot((p(x)-f(x))/f(x), p(x)-f(x),
                       i,
                       postscriptfile, "rsqrt-i1-f64");

/* root12 f64 */
f= x^(1/12);
i= [2^(-12), 2^(-9)];
d = guessdegree(f, i, 0x1p-8);
d;
b = [|0, ..., 2|];
c = [|D...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double root12_i0_c", "root12_i0", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x),
                       i,
                       postscriptfile, "root12-i0-f64");

/* root12 f64 */
f= x^(1/12);
i= [2^(-9), 2^(-6)];
d = guessdegree(f, i, 0x1p-8);
d;
b = [|0, ..., 2|];
c = [|D...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double root12_i1_c", "root12_i1", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x),
                       i,
                       postscriptfile, "root12-i1-f64");

/* root12 f64 */
f= x^(1/12);
i= [2^(-6), 2^(-3)];
d = guessdegree(f, i, 0x1p-8);
d;
b = [|0, ..., 2|];
c = [|D...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double root12_i2_c", "root12_i2", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x),
                       i,
                       postscriptfile, "root12-i2-f64");

/* root12 f64 */
f= x^(1/12);
i= [2^(-3), 2^(-0)];
d = guessdegree(f, i, 0x1p-8);
d;
b = [|0, ..., 2|];
c = [|D...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double root12_i3_c", "root12_i3", b, c);
plot((p(x)-f(x))/f(x), p(x)-f(x),
                       i,
                       postscriptfile, "root12-i3-f64");


/* sin(x) f64 with ~64 bit precision */
i = [0x1p-512, pi/4];
f = sin(x);
d = guessdegree(f, i, 0x1p-64);
d;
b = [|1, 3, 5, 7, 9, 11, 13, 15, 17|];
c = [|D, DD, D...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double sin_c", "sin", b, c);
/*implementpoly(p, i, 0x1p-64, DD, "__sin_k", "sin.c");*/
plot((p(x)-f(x))/f(x), p(x)-f(x), i,
                       postscriptfile, "sin-f64-ep");

/* cos(x) f64 with ~64 bit precision */
i = [0x1p-512, pi/4];
f = cos(x);
d = guessdegree(f, i, 0x1p-64);
d;
b = [|0, 2, 4, 6, 8, 10, 12, 14, 16|];
c = [|D, D, DD, D...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double cos_c", "cos", b, c);
/*implementpoly(p, i, 0x1p-64, DD, "__cos_k", "cos.c");*/
plot((p(x)-f(x))/f(x), p(x)-f(x), i,
                       postscriptfile, "cos-f64-ep");

/* asinh(x) f64 */
f = asinh(x);
i = [0, sqrt(2)/2];
d = guessdegree(f, i, 0x1p-60);
d;
b = [|1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31|];
c = [|D...|];
p = fpminimax(f, b, c, i,
              relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double asinh_i0_c", "asinh_i0", b, c);
plot((p(x)-f(x))/f(x), i,
                       postscriptfile, "asinh_i0-f64");

il= sqrt(2)/2;
ir= 3.0;
im= dirtyfindzeros(asinh(x)-(0.5*(asinh(il)+asinh(ir))), [il, ir])[0];
im= round(im, 24, RN);
i = [il-im, ir-im];
i;
im;
x0= im;
f = asinh(x+x0);
d = guessdegree(f, i, 0x1p-60);
d;
b = [|0, ..., 29|];
c = [|DD, D...|];
p = fpminimax(f, b, c, i, relative, floating);
p;
write_approx_prec_shift(p, f, i, im);
write_coeffs(p, "const double asinh_i1_c", "asinh_i1", b, c);
write_coeff(il, "", "const double asinh_i1_left", double);
write_coeff(ir, "", "const double asinh_i1_right", double);
write_coeff(x0, "", "const double asinh_i1_x0", double);
plot((p(x)-f(x))/f(x), i, postscriptfile, "asinh_i1-f64");

/* acosh f64 */
i = [0x1p-58, 1.0];
f = acosh(1+x)/sqrt(2*x);
d = guessdegree(f, i, 0x1p-60);
d;
b = [|0, ..., 16|];
c = [|D...|];
p = fpminimax(f, b, c, i, relative, floating);
write_approx_prec(p, f, i);
write_coeffs(p, "const double acosh_i0_c", "acosh_i0", b, c);
plot((p(x)-f(x))/f(x), i,
                       postscriptfile, "acosh_i0-f64");

il= 2.0;
ir= 2.75;
im= dirtyfindzeros(acosh(x)-(0.5*(acosh(il)+acosh(ir))), [il, ir])[0];
im= round(im, 24, RN);
i = [il-im, ir-im];
i;
im;
x0= im;
f = acosh(x+x0);
d = guessdegree(f, i, 0x1p-60);
d;
b = [|0, ..., 18|];
c = [|DD, D...|];
p = fpminimax(f, b, c, i, relative, floating);
p;
write_approx_prec_shift(p, f, i, im);
write_coeffs(p, "const double acosh_i1_c", "acosh_i1", b, c);
write_coeff(il, "", "const double acosh_i1_left", double);
write_coeff(ir, "", "const double acosh_i1_right", double);
write_coeff(x0, "", "const double acosh_i1_x0", double);
plot((p(x)-f(x))/f(x), i, postscriptfile, "acosh_i1-f64");

il= 2.75;
ir= 3.5;
im= dirtyfindzeros(acosh(x)-(0.5*(acosh(il)+acosh(ir))), [il, ir])[0];
im= round(im, 24, RN);
i = [il-im, ir-im];
i;
im;
x0= im;
f = acosh(x+x0);
d = guessdegree(f, i, 0x1p-60);
d;
b = [|0, ..., 16|];
c = [|DD, D...|];
p = fpminimax(f, b, c, i, relative, floating);
p;
write_approx_prec_shift(p, f, i, im);
write_coeffs(p, "const double acosh_i2_c", "acosh_i2", b, c);
write_coeff(il, "", "const double acosh_i2_left", double);
write_coeff(ir, "", "const double acosh_i2_right", double);
write_coeff(x0, "", "const double acosh_i2_x0", double);
plot((p(x)-f(x))/f(x), i, postscriptfile, "acosh_i2-f64");

/* atanh(x) piecewise polynomial approximations */
i = [0, 0.5];
f = atanh(x);
d = guessdegree(f, i, 0x1p-60);
d;
b = [|1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27|];
c = [|D, D...|];
p = fpminimax(f, b, c, i, relative, floating);
p;
write_approx_prec(p, f, i);
write_coeffs(p, "const double atanh_i0_c", "atanh_i0", b, c);
plot((p(x)-f(x))/f(x), i, postscriptfile, "atanh_i0-f64");

il= 0.5;
ir= /* sqrt(2)/2*/ 0.75;
im= dirtyfindzeros(atanh(x)-(0.5*(atanh(il)+atanh(ir))), [il, ir])[0];
im= round(im, 24, RN);
i = [il-im, ir-im];
i;
im;
x0= im;
f = atanh(x+x0);
d = guessdegree(f, i, 0x1p-60);
d;
b = [|0, ..., 21|];
c = [|DD, D...|];
p = fpminimax(f, b, c, i, relative, floating);
p;
write_approx_prec_shift(p, f, i, im);
write_coeffs(p, "const double atanh_i1_c", "atanh_i1", b, c);
write_coeff(il, "", "const double atanh_i1_left", double);
write_coeff(x0, "", "const double atanh_i1_x0", double);
plot((p(x)-f(x))/f(x), i, postscriptfile, "atanh_i1-f64");

/*
 * Local variables:
 * mode: c++
 * end:
 */
